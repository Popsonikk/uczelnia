//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : Klient.cpp
//  @ Date : 28.04.2022
//  @ Author :
//
//


#include "Klient.h"
#include "Baza.h"
#include "Sklepikarz.h"
#include "Serwisant.h"
#include <string>
#include <vector>
#include <tuple>
#include <iostream>



Wlasciciel Klient::kupRower(std::string marka,Wlasciciel wlasciciel,float cena,int ilosc) {
    Sklepikarz* skl=new Sklepikarz("Geralt",1);
    Baza b=wlasciciel.getBaza();
    Konto k=wlasciciel.getKonto();
    std::tuple <Baza,Konto>t= skl->wykonajPrace(marka,false,b,k,ilosc,cena);
    b=std::get < 0 >( t );
    k=std::get < 1 >( t );
    wlasciciel.setBaza(b);
    wlasciciel.setKonto(k);
    delete skl;
    return wlasciciel;

}

Wlasciciel Klient::naprawRower(std::string marka, Wlasciciel wlasciciel) {
    Serwisant* skl=new Serwisant("Jaskier",1);
    Baza b=wlasciciel.getBaza();
    Konto k=wlasciciel.getKonto();
    std::tuple<Baza,Konto> t= skl->wykonajPrace(marka,false,b,k);
    wlasciciel.setBaza(std::get < 0 >( t ));
    wlasciciel.setKonto(std::get < 1 >( t ));
    delete skl;
    return wlasciciel;
}

Wlasciciel Klient::zwrocRower(std::string marka, Wlasciciel wlasciciel,float cena,int ilosc) {
    Sklepikarz* skl=new Sklepikarz("Geralt",2);
    Baza b=wlasciciel.getBaza();
    Konto k=wlasciciel.getKonto();
    std::tuple <Baza,Konto>t= skl->wykonajPrace(marka,true,b,k,ilosc,cena);
    wlasciciel.setBaza(std::get < 0 >( t ));
    wlasciciel.setKonto(std::get < 1 >( t ));
    delete skl;
    return wlasciciel;

}
void Klient::zobaczStan(Wlasciciel wlasciciel)
{
    wlasciciel.getBaza().SprawdzDostepnoscKatalogu();
}
Klient::Klient()
{

}

